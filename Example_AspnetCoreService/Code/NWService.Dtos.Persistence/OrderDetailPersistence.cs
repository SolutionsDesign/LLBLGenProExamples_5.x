//------------------------------------------------------------------------------
// <auto-generated>This code was generated by LLBLGen Pro v5.8.</auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using SD.LLBLGen.Pro.QuerySpec;
using NWService.Dal.HelperClasses;

namespace NWService.Dtos.Persistence
{
	/// <summary>Static class for (extension) methods for fetching and projecting instances of NWService.Dtos.DtoClasses.OrderDetail from / to the entity model.</summary>
	public static partial class OrderDetailPersistence
	{
		private static readonly System.Linq.Expressions.Expression<Func<NWService.Dal.EntityClasses.OrderDetailEntity, NWService.Dtos.DtoClasses.OrderDetail>> _projectorExpression = CreateProjectionFunc();
		private static readonly Func<NWService.Dal.EntityClasses.OrderDetailEntity, NWService.Dtos.DtoClasses.OrderDetail> _compiledProjector = CreateProjectionFunc().Compile();
	
		/// <summary>Empty static ctor for triggering initialization of static members in a thread-safe manner</summary>
		static OrderDetailPersistence() { }
	
		/// <summary>Extension method which produces a projection to NWService.Dtos.DtoClasses.OrderDetail which instances are projected from the 
		/// results of the specified baseQuery, which returns NWService.Dal.EntityClasses.OrderDetailEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <returns>IQueryable to retrieve NWService.Dtos.DtoClasses.OrderDetail instances</returns>
		public static IQueryable<NWService.Dtos.DtoClasses.OrderDetail> ProjectToOrderDetail(this IQueryable<NWService.Dal.EntityClasses.OrderDetailEntity> baseQuery)
		{
			return baseQuery.Select(_projectorExpression);
		}

		/// <summary>Extension method which produces a projection to NWService.Dtos.DtoClasses.OrderDetail which instances are projected from the 
		/// results of the specified baseQuery using QuerySpec, which returns NWService.Dal.EntityClasses.OrderDetailEntity instances, the root entity of the derived element returned by this query.</summary>
		/// <param name="baseQuery">The base query to project the derived element instances from.</param>
		/// <param name="qf">The query factory used to create baseQuery.</param>
		/// <returns>DynamicQuery to retrieve NWService.Dtos.DtoClasses.OrderDetail instances</returns>
		public static DynamicQuery<NWService.Dtos.DtoClasses.OrderDetail> ProjectToOrderDetail(this EntityQuery<NWService.Dal.EntityClasses.OrderDetailEntity> baseQuery, NWService.Dal.FactoryClasses.QueryFactory qf)
		{
			return qf.Create()
				.From(baseQuery.Select(Projection.Full).As("__BQ"))
				.Select(() => new NWService.Dtos.DtoClasses.OrderDetail()
				{
					Discount = OrderDetailFields.Discount.Source("__BQ").ToValue<System.Single>(),
					OrderId = OrderDetailFields.OrderId.Source("__BQ").ToValue<System.Int32>(),
					ProductId = OrderDetailFields.ProductId.Source("__BQ").ToValue<System.Int32>(),
					Quantity = OrderDetailFields.Quantity.Source("__BQ").ToValue<System.Int16>(),
					UnitPrice = OrderDetailFields.UnitPrice.Source("__BQ").ToValue<System.Decimal>(),
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegionQS_OrderDetail 
	// __LLBLGENPRO_USER_CODE_REGION_END 
				});
		}

		/// <summary>Extension method which produces a projection to NWService.Dtos.DtoClasses.OrderDetail which instances are projected from the
		/// NWService.Dal.EntityClasses.OrderDetailEntity entity instance specified, the root entity of the derived element returned by this method.</summary>
		/// <param name="entity">The entity to project from.</param>
		/// <returns>NWService.Dal.EntityClasses.OrderDetailEntity instance created from the specified entity instance</returns>
		public static NWService.Dtos.DtoClasses.OrderDetail ProjectToOrderDetail(this NWService.Dal.EntityClasses.OrderDetailEntity entity)
		{
			return _compiledProjector(entity);
		}
		
		private static System.Linq.Expressions.Expression<Func<NWService.Dal.EntityClasses.OrderDetailEntity, NWService.Dtos.DtoClasses.OrderDetail>> CreateProjectionFunc()
		{
			return p__0 => new NWService.Dtos.DtoClasses.OrderDetail()
			{
				Discount = p__0.Discount,
				OrderId = p__0.OrderId,
				ProductId = p__0.ProductId,
				Quantity = p__0.Quantity,
				UnitPrice = p__0.UnitPrice,
	// __LLBLGENPRO_USER_CODE_REGION_START ProjectionRegion_OrderDetail 
	// __LLBLGENPRO_USER_CODE_REGION_END 
			};
		}
		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query which is executed on the database to fetch the original entity instance the specified <see cref="dto"/> object was projected from.</summary>
		/// <param name="dto">The dto object for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use expression</returns>
		public static System.Linq.Expressions.Expression<Func<NWService.Dal.EntityClasses.OrderDetailEntity, bool>> CreatePkPredicate(NWService.Dtos.DtoClasses.OrderDetail dto)
		{
			return p__0 => p__0.OrderId == dto.OrderId;
		}

		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query which is executed on the database to fetch the original entity instances the specified set of <see cref="dtos"/> objects was projected from.</summary>
		/// <param name="dtos">The dto objects for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use expression</returns>
		public static System.Linq.Expressions.Expression<Func<NWService.Dal.EntityClasses.OrderDetailEntity, bool>> CreatePkPredicate(IEnumerable<NWService.Dtos.DtoClasses.OrderDetail> dtos)
		{
			return p__0 => dtos.Select(p__1=>p__1.OrderId).ToList().Contains(p__0.OrderId);
		}

		/// <summary>Creates a primary key predicate to be used in a Where() clause in a Linq query on an IEnumerable in-memory set of entity instances to retrieve the original entity instance the specified <see cref="dto"/> object was projected from.</summary>
		/// <param name="dto">The dto object for which the primary key predicate has to be created for.</param>
		/// <returns>ready to use func</returns>
		public static Func<NWService.Dal.EntityClasses.OrderDetailEntity, bool> CreateInMemoryPkPredicate(NWService.Dtos.DtoClasses.OrderDetail dto)
		{
			return p__0 => p__0.OrderId == dto.OrderId;
		}
		
		/// <summary>Updates the specified NWService.Dal.EntityClasses.OrderDetailEntity entity with the values stored in the dto object specified</summary>
		/// <param name="toUpdate">the entity instance to update.</param>
		/// <param name="dto">The dto object containing the source values.</param>
		/// <remarks>The PK field of toUpdate is set only if it's not marked as readonly.</remarks>
		public static void UpdateFromOrderDetail(this NWService.Dal.EntityClasses.OrderDetailEntity toUpdate, NWService.Dtos.DtoClasses.OrderDetail dto)
		{
			if((toUpdate == null) || (dto == null))
			{
				return;
			}
			toUpdate.Discount = dto.Discount;
			toUpdate.OrderId = dto.OrderId;
			toUpdate.ProductId = dto.ProductId;
			toUpdate.Quantity = dto.Quantity;
			toUpdate.UnitPrice = dto.UnitPrice;
		}
	}
}

 