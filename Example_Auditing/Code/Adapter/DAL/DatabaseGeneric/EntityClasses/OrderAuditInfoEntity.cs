//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: Tuesday, 1 February 2022 15:54:55
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using SD.LLBLGen.Pro.Examples.Auditing.HelperClasses;
using SD.LLBLGen.Pro.Examples.Auditing.FactoryClasses;
using SD.LLBLGen.Pro.Examples.Auditing.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace SD.LLBLGen.Pro.Examples.Auditing.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'OrderAuditInfo'.<br/><br/></summary>
	[Serializable]
	public partial class OrderAuditInfoEntity : AuditInfoEntity
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private OrderEntity _order;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static OrderAuditInfoEntityStaticMetaData _staticMetaData = new OrderAuditInfoEntityStaticMetaData();
		private static OrderAuditInfoRelations _relationsFactory = new OrderAuditInfoRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public new static partial class MemberNames
		{
			/// <summary>Member name AuditActionType</summary>
			public static readonly string AuditActionType = "AuditActionType";
			/// <summary>Member name Order</summary>
			public static readonly string Order = "Order";
			/// <summary>Member name User</summary>
			public static readonly string User = "User";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class OrderAuditInfoEntityStaticMetaData : AuditInfoEntityStaticMetaData
		{
			public OrderAuditInfoEntityStaticMetaData()
			{
				SetEntityCoreInfo("OrderAuditInfoEntity", InheritanceHierarchyType.TargetPerEntity, true, (int)SD.LLBLGen.Pro.Examples.Auditing.EntityType.OrderAuditInfoEntity, typeof(OrderAuditInfoEntity), typeof(OrderAuditInfoEntityFactory), false);
				AddNavigatorMetaData<OrderAuditInfoEntity, OrderEntity>("Order", "OrderAuditInfo", (a, b) => a._order = b, a => a._order, (a, b) => a.Order = b, SD.LLBLGen.Pro.Examples.Auditing.RelationClasses.StaticOrderAuditInfoRelations.OrderEntityUsingOrderIdStatic, ()=>new OrderAuditInfoRelations().OrderEntityUsingOrderId, null, new int[] { (int)OrderAuditInfoFieldIndex.OrderId }, null, true, (int)SD.LLBLGen.Pro.Examples.Auditing.EntityType.OrderEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static OrderAuditInfoEntity()
		{
		}

		/// <summary> CTor</summary>
		public OrderAuditInfoEntity()
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public OrderAuditInfoEntity(IEntityFields2 fields) : base(fields)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this OrderAuditInfoEntity</param>
		public OrderAuditInfoEntity(IValidator validator) : base(validator)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="auditInfoId">PK value for OrderAuditInfo which data should be fetched into this OrderAuditInfo object</param>
		public OrderAuditInfoEntity(System.Int32 auditInfoId) : base(auditInfoId)
		{
			InitClassEmpty();
		}

		/// <summary> CTor</summary>
		/// <param name="auditInfoId">PK value for OrderAuditInfo which data should be fetched into this OrderAuditInfo object</param>
		/// <param name="validator">The custom validator object for this OrderAuditInfoEntity</param>
		public OrderAuditInfoEntity(System.Int32 auditInfoId, IValidator validator) : base(auditInfoId, validator)
		{
			InitClassEmpty();
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected OrderAuditInfoEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Gets a predicateexpression which filters on this entity. Only useful in entity fetches</summary>
		/// <param name="negate">Optional flag to produce a NOT filter, (true), or a normal filter (false, default). </param>
		/// <returns>ready to use predicateexpression</returns>
		public new static IPredicateExpression GetEntityTypeFilter(bool negate=false) { return ModelInfoProviderSingleton.GetInstance().GetEntityTypeFilter("OrderAuditInfoEntity", negate); }

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entity of type 'Order' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoOrder() { return CreateRelationInfoForNavigator("Order"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{

			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		private void InitClassEmpty()
		{
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public new static OrderAuditInfoRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'Order' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathOrder { get { return _staticMetaData.GetPrefetchPathElement("Order", CommonEntityBase.CreateEntityCollection<OrderEntity>()); } }

		/// <summary>The OrderId property of the Entity OrderAuditInfo<br/><br/></summary>
		/// <remarks>Mapped on  table field: "OrderAuditInfo"."OrderID".<br/>Table field type characteristics (type, precision, scale, length): Int, 10, 0, 0.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, false, false</remarks>
		public virtual System.Int32 OrderId
		{
			get { return (System.Int32)GetValue((int)OrderAuditInfoFieldIndex.OrderId, true); }
			set	{ SetValue((int)OrderAuditInfoFieldIndex.OrderId, value); }
		}

		/// <summary>Gets / sets related entity of type 'OrderEntity' which has to be set using a fetch action earlier. If no related entity is set for this property, null is returned..<br/><br/></summary>
		[Browsable(true)]
		public virtual OrderEntity Order
		{
			get { return _order; }
			set { SetSingleRelatedEntityNavigator(value, "Order"); }
		}

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace SD.LLBLGen.Pro.Examples.Auditing
{
	public enum OrderAuditInfoFieldIndex
	{
		///<summary>ActionData. Inherited from AuditInfo</summary>
		ActionData,
		///<summary>ActionDateTime. Inherited from AuditInfo</summary>
		ActionDateTime,
		///<summary>AffectedEntityName. Inherited from AuditInfo</summary>
		AffectedEntityName,
		///<summary>AuditActionTypeId. Inherited from AuditInfo</summary>
		AuditActionTypeId,
		///<summary>AuditInfoId. Inherited from AuditInfo</summary>
		AuditInfoId_AuditInfo,
		///<summary>UserId. Inherited from AuditInfo</summary>
		UserId,
		///<summary>AuditInfoId. </summary>
		AuditInfoId,
		///<summary>OrderId. </summary>
		OrderId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace SD.LLBLGen.Pro.Examples.Auditing.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: OrderAuditInfo. </summary>
	public partial class OrderAuditInfoRelations: AuditInfoRelations
	{

		/// <summary>Returns a new IEntityRelation object, between OrderAuditInfoEntity and AuditActionTypeEntity over the m:1 relation they have, using the relation between the fields: OrderAuditInfo.AuditActionTypeId - AuditActionType.AuditActionTypeId</summary>
		public override IEntityRelation AuditActionTypeEntityUsingAuditActionTypeId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "AuditActionType", false, new[] { AuditActionTypeFields.AuditActionTypeId, OrderAuditInfoFields.AuditActionTypeId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between OrderAuditInfoEntity and OrderEntity over the m:1 relation they have, using the relation between the fields: OrderAuditInfo.OrderId - Order.OrderId</summary>
		public virtual IEntityRelation OrderEntityUsingOrderId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "Order", false, new[] { OrderFields.OrderId, OrderAuditInfoFields.OrderId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between OrderAuditInfoEntity and UserEntity over the m:1 relation they have, using the relation between the fields: OrderAuditInfo.UserId - User.UserId</summary>
		public override IEntityRelation UserEntityUsingUserId
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.ManyToOne, "User", false, new[] { UserFields.UserId, OrderAuditInfoFields.UserId }); }
		}

		/// <summary>Returns a new IEntityRelation object, between OrderAuditInfoEntity and AuditInfoEntity over the 1:1 relation they have, which is used to build a target per entity hierarchy</summary>
		internal IEntityRelation RelationToSuperTypeAuditInfoEntity
		{
			get	{ return ModelInfoProviderSingleton.GetInstance().CreateHierarchyRelation(false, new[] { AuditInfoFields.AuditInfoId, OrderAuditInfoFields.AuditInfoId }); }
		}

		/// <inheritdoc/>
		public override IEntityRelation GetSubTypeRelation(string subTypeEntityName)
		{
			return null;
		}
		
		/// <inheritdoc/>
		public override IEntityRelation GetSuperTypeRelation()	{ return this.RelationToSuperTypeAuditInfoEntity; }

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticOrderAuditInfoRelations
	{
		internal static readonly IEntityRelation AuditActionTypeEntityUsingAuditActionTypeIdStatic = new OrderAuditInfoRelations().AuditActionTypeEntityUsingAuditActionTypeId;
		internal static readonly IEntityRelation OrderEntityUsingOrderIdStatic = new OrderAuditInfoRelations().OrderEntityUsingOrderId;
		internal static readonly IEntityRelation UserEntityUsingUserIdStatic = new OrderAuditInfoRelations().UserEntityUsingUserId;

		/// <summary>CTor</summary>
		static StaticOrderAuditInfoRelations() { }
	}
}
