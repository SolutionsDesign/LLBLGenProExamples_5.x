//////////////////////////////////////////////////////////////
// <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
//////////////////////////////////////////////////////////////
// Code is generated on: 
// Code is generated using templates: SD.TemplateBindings.SharedTemplates
// Templates vendor: Solutions Design.
//////////////////////////////////////////////////////////////
using System;
using System.ComponentModel;
using System.Collections.Generic;
using System.Runtime.Serialization;
using System.Xml.Serialization;
using Northwind.DAL.HelperClasses;
using Northwind.DAL.FactoryClasses;
using Northwind.DAL.RelationClasses;

using SD.LLBLGen.Pro.ORMSupportClasses;

namespace Northwind.DAL.EntityClasses
{
	// __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
	// __LLBLGENPRO_USER_CODE_REGION_END
	/// <summary>Entity class which represents the entity 'CustomerDemographic'.<br/><br/></summary>
	[Serializable]
	public partial class CustomerDemographicEntity : CommonEntityBase
		// __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		// __LLBLGENPRO_USER_CODE_REGION_END	
	{
		private EntityCollection<CustomerCustomerDemoEntity> _customerCustomerDemos;

		// __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		// __LLBLGENPRO_USER_CODE_REGION_END
		private static CustomerDemographicEntityStaticMetaData _staticMetaData = new CustomerDemographicEntityStaticMetaData();
		private static CustomerDemographicRelations _relationsFactory = new CustomerDemographicRelations();

		/// <summary>All names of fields mapped onto a relation. Usable for in-memory filtering</summary>
		public static partial class MemberNames
		{
			/// <summary>Member name CustomerCustomerDemos</summary>
			public static readonly string CustomerCustomerDemos = "CustomerCustomerDemos";
		}

		/// <summary>Static meta-data storage for navigator related information</summary>
		protected class CustomerDemographicEntityStaticMetaData : EntityStaticMetaDataBase
		{
			public CustomerDemographicEntityStaticMetaData()
			{
				SetEntityCoreInfo("CustomerDemographicEntity", InheritanceHierarchyType.None, false, (int)Northwind.DAL.EntityType.CustomerDemographicEntity, typeof(CustomerDemographicEntity), typeof(CustomerDemographicEntityFactory), false);
				AddNavigatorMetaData<CustomerDemographicEntity, EntityCollection<CustomerCustomerDemoEntity>>("CustomerCustomerDemos", a => a._customerCustomerDemos, (a, b) => a._customerCustomerDemos = b, a => a.CustomerCustomerDemos, () => new CustomerDemographicRelations().CustomerCustomerDemoEntityUsingCustomerTypeId, typeof(CustomerCustomerDemoEntity), (int)Northwind.DAL.EntityType.CustomerCustomerDemoEntity);
			}
		}

		/// <summary>Static ctor</summary>
		static CustomerDemographicEntity()
		{
		}

		/// <summary> CTor</summary>
		public CustomerDemographicEntity()
		{
			InitClassEmpty(null, null);
		}

		/// <summary> CTor</summary>
		/// <param name="fields">Fields object to set as the fields for this entity.</param>
		public CustomerDemographicEntity(IEntityFields2 fields)
		{
			InitClassEmpty(null, fields);
		}

		/// <summary> CTor</summary>
		/// <param name="validator">The custom validator object for this CustomerDemographicEntity</param>
		public CustomerDemographicEntity(IValidator validator)
		{
			InitClassEmpty(validator, null);
		}

		/// <summary> CTor</summary>
		/// <param name="customerTypeId">PK value for CustomerDemographic which data should be fetched into this CustomerDemographic object</param>
		public CustomerDemographicEntity(System.String customerTypeId) : this(customerTypeId, null)
		{
		}

		/// <summary> CTor</summary>
		/// <param name="customerTypeId">PK value for CustomerDemographic which data should be fetched into this CustomerDemographic object</param>
		/// <param name="validator">The custom validator object for this CustomerDemographicEntity</param>
		public CustomerDemographicEntity(System.String customerTypeId, IValidator validator)
		{
			InitClassEmpty(validator, null);
			this.CustomerTypeId = customerTypeId;
		}

		/// <summary>Private CTor for deserialization</summary>
		/// <param name="info"></param>
		/// <param name="context"></param>
		protected CustomerDemographicEntity(SerializationInfo info, StreamingContext context) : base(info, context)
		{
			// __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			// __LLBLGENPRO_USER_CODE_REGION_END
		}

		/// <summary>Creates a new IRelationPredicateBucket object which contains the predicate expression and relation collection to fetch the related entities of type 'CustomerCustomerDemo' to this entity.</summary>
		/// <returns></returns>
		public virtual IRelationPredicateBucket GetRelationInfoCustomerCustomerDemos() { return CreateRelationInfoForNavigator("CustomerCustomerDemos"); }
		
		/// <inheritdoc/>
		protected override EntityStaticMetaDataBase GetEntityStaticMetaData() {	return _staticMetaData; }

		/// <summary>Initializes the class members</summary>
		private void InitClassMembers()
		{
			PerformDependencyInjection();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassMembers
			// __LLBLGENPRO_USER_CODE_REGION_END
			OnInitClassMembersComplete();
		}

		/// <summary>Initializes the class with empty data, as if it is a new Entity.</summary>
		/// <param name="validator">The validator object for this CustomerDemographicEntity</param>
		/// <param name="fields">Fields of this entity</param>
		private void InitClassEmpty(IValidator validator, IEntityFields2 fields)
		{
			OnInitializing();
			this.Fields = fields ?? CreateFields();
			this.Validator = validator;
			InitClassMembers();
			// __LLBLGENPRO_USER_CODE_REGION_START InitClassEmpty
			// __LLBLGENPRO_USER_CODE_REGION_END

			OnInitialized();
		}

		/// <summary>The relations object holding all relations of this entity with other entity classes.</summary>
		public static CustomerDemographicRelations Relations { get { return _relationsFactory; } }

		/// <summary>Creates a new PrefetchPathElement2 object which contains all the information to prefetch the related entities of type 'CustomerCustomerDemo' for this entity.</summary>
		/// <returns>Ready to use IPrefetchPathElement2 implementation.</returns>
		public static IPrefetchPathElement2 PrefetchPathCustomerCustomerDemos { get { return _staticMetaData.GetPrefetchPathElement("CustomerCustomerDemos", CommonEntityBase.CreateEntityCollection<CustomerCustomerDemoEntity>()); } }

		/// <summary>The CustomerDesc property of the Entity CustomerDemographic<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CustomerDemographics"."CustomerDesc".<br/>Table field type characteristics (type, precision, scale, length): NText, 0, 0, 1073741823.<br/>Table field behavior characteristics (is nullable, is PK, is identity): true, false, false</remarks>
		public virtual System.String CustomerDesc
		{
			get { return (System.String)GetValue((int)CustomerDemographicFieldIndex.CustomerDesc, true); }
			set	{ SetValue((int)CustomerDemographicFieldIndex.CustomerDesc, value); }
		}

		/// <summary>The CustomerTypeId property of the Entity CustomerDemographic<br/><br/></summary>
		/// <remarks>Mapped on  table field: "CustomerDemographics"."CustomerTypeID".<br/>Table field type characteristics (type, precision, scale, length): NChar, 0, 0, 10.<br/>Table field behavior characteristics (is nullable, is PK, is identity): false, true, false</remarks>
		public virtual System.String CustomerTypeId
		{
			get { return (System.String)GetValue((int)CustomerDemographicFieldIndex.CustomerTypeId, true); }
			set	{ SetValue((int)CustomerDemographicFieldIndex.CustomerTypeId, value); }
		}

		/// <summary>Gets the EntityCollection with the related entities of type 'CustomerCustomerDemoEntity' which are related to this entity via a relation of type '1:n'. If the EntityCollection hasn't been fetched yet, the collection returned will be empty.<br/><br/></summary>
		[TypeContainedAttribute(typeof(CustomerCustomerDemoEntity))]
		public virtual EntityCollection<CustomerCustomerDemoEntity> CustomerCustomerDemos { get { return GetOrCreateEntityCollection<CustomerCustomerDemoEntity, CustomerCustomerDemoEntityFactory>("CustomerDemographic", true, false, ref _customerCustomerDemos); } }

		// __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		// __LLBLGENPRO_USER_CODE_REGION_END

	}
}

namespace Northwind.DAL
{
	public enum CustomerDemographicFieldIndex
	{
		///<summary>CustomerDesc. </summary>
		CustomerDesc,
		///<summary>CustomerTypeId. </summary>
		CustomerTypeId,
		/// <summary></summary>
		AmountOfFields
	}
}

namespace Northwind.DAL.RelationClasses
{
	/// <summary>Implements the relations factory for the entity: CustomerDemographic. </summary>
	public partial class CustomerDemographicRelations: RelationFactory
	{
		/// <summary>Returns a new IEntityRelation object, between CustomerDemographicEntity and CustomerCustomerDemoEntity over the 1:n relation they have, using the relation between the fields: CustomerDemographic.CustomerTypeId - CustomerCustomerDemo.CustomerTypeId</summary>
		public virtual IEntityRelation CustomerCustomerDemoEntityUsingCustomerTypeId
		{
			get { return ModelInfoProviderSingleton.GetInstance().CreateRelation(RelationType.OneToMany, "CustomerCustomerDemos", true, new[] { CustomerDemographicFields.CustomerTypeId, CustomerCustomerDemoFields.CustomerTypeId }); }
		}

	}
	
	/// <summary>Static class which is used for providing relationship instances which are re-used internally for syncing</summary>
	internal static class StaticCustomerDemographicRelations
	{
		internal static readonly IEntityRelation CustomerCustomerDemoEntityUsingCustomerTypeIdStatic = new CustomerDemographicRelations().CustomerCustomerDemoEntityUsingCustomerTypeId;

		/// <summary>CTor</summary>
		static StaticCustomerDemographicRelations() { }
	}
}
